.\" Man page generated from reStructuredText.
.
.TH "MEMCACHED_RETURN_T" "3" "July 03, 2018" "1.1.0" "libmemcached"
.SH NAME
memcached_return_t \- Return type values 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
#include <libmemcached/memcached.h>
.INDENT 0.0
.TP
.B memcached_return_t
.UNINDENT
.INDENT 0.0
.TP
.B const char *libmemcached_strerror(\fI\%memcached_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool libmemcached_success(\fI\%memcached_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool libmemcached_failure(\fI\%memcached_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool libmemcache_continue(\fI\%memcached_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool memcached_success(\fI\%memcached_return_t\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool memcached_failure(\fI\%memcached_return_t\fP)
.UNINDENT
.sp
\fI\%memcached_success()\fP return true if \fBMEMCACHED_SUCCESS\fP tested true.
.sp
\fI\%memcached_failure()\fP return true if any value other then \fBMEMCACHED_SUCCESS\fP was provided.
.SS Libmemcached return types:
.sp
\fBMEMCACHED_SUCCESS\fP
.sp
\fBMEMCACHED_FAILURE\fP
.sp
\fBMEMCACHED_HOST_LOOKUP_FAILURE\fP
.sp
\fBMEMCACHED_CONNECTION_FAILURE\fP
.sp
\fBMEMCACHED_CONNECTION_BIND_FAILURE\fP
.sp
\fBMEMCACHED_WRITE_FAILURE\fP
.sp
\fBMEMCACHED_READ_FAILURE\fP
.sp
\fBMEMCACHED_UNKNOWN_READ_FAILURE\fP
.sp
\fBMEMCACHED_PROTOCOL_ERROR\fP
.sp
\fBMEMCACHED_CLIENT_ERROR\fP
.sp
\fBMEMCACHED_SERVER_ERROR\fP
.sp
\fBMEMCACHED_CONNECTION_SOCKET_CREATE_FAILURE\fP
.sp
\fBMEMCACHED_DATA_EXISTS\fP
.sp
\fBMEMCACHED_DATA_DOES_NOT_EXIST\fP
.sp
\fBMEMCACHED_NOTSTORED\fP
.sp
\fBMEMCACHED_STORED\fP
.sp
\fBMEMCACHED_NOTFOUND\fP
.sp
\fBMEMCACHED_MEMORY_ALLOCATION_FAILURE\fP
.sp
\fBMEMCACHED_PARTIAL_READ\fP
.sp
\fBMEMCACHED_SOME_ERRORS\fP
.sp
\fBMEMCACHED_NO_SERVERS\fP
.sp
\fBMEMCACHED_END\fP
.sp
\fBMEMCACHED_DELETED\fP
.sp
\fBMEMCACHED_VALUE\fP
.sp
\fBMEMCACHED_STAT\fP
.sp
\fBMEMCACHED_ITEM\fP
.sp
\fBMEMCACHED_ERRNO\fP
.sp
\fBMEMCACHED_FAIL_UNIX_SOCKET\fP
.sp
\fBMEMCACHED_NOT_SUPPORTED\fP
.sp
\fBMEMCACHED_NO_KEY_PROVIDED\fP
.sp
\fBMEMCACHED_FETCH_NOTFINISHED\fP
.sp
\fBMEMCACHED_TIMEOUT\fP
.sp
\fBMEMCACHED_BUFFERED\fP
.sp
\fBMEMCACHED_BAD_KEY_PROVIDED\fP
.sp
\fBMEMCACHED_INVALID_HOST_PROTOCOL\fP
.sp
\fBMEMCACHED_SERVER_MARKED_DEAD\fP
.sp
\fBMEMCACHED_UNKNOWN_STAT_KEY\fP
.sp
\fBMEMCACHED_E2BIG\fP
.sp
\fBMEMCACHED_INVALID_ARGUMENTS\fP
.sp
\fBMEMCACHED_KEY_TOO_BIG\fP
.sp
\fBMEMCACHED_AUTH_PROBLEM\fP
.sp
\fBMEMCACHED_AUTH_FAILURE\fP
.sp
\fBMEMCACHED_AUTH_CONTINUE\fP
.sp
\fBMEMCACHED_PARSE_ERROR\fP
.sp
\fBMEMCACHED_PARSE_USER_ERROR\fP
.sp
\fBMEMCACHED_DEPRECATED\fP
.SH SEE ALSO
.sp
\fImemcached\fP \fIlibmemcached\fP \fImemcached_client_error\fP or \fImemcached_worker_error\fP
.SH AUTHOR
Brian Aker
.SH COPYRIGHT
2011-2013, Brian Aker DataDifferential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.
